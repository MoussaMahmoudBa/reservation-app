#!/usr/bin/env python3
"""
Test de navigation et authentification
"""

import requests
import json

def test_navigation():
    """Test de navigation et authentification"""
    print("=" * 60)
    print("TEST NAVIGATION ET AUTHENTIFICATION")
    print("=" * 60)
    
    # URL du serveur
    base_url = "http://localhost:8000"
    
    # 1. Se connecter
    print("1. Connexion...")
    login_data = {
        "phone": "+22241240690",
        "password": "Moussa123"
    }
    
    try:
        login_response = requests.post(f"{base_url}/api/auth/login/", json=login_data)
        print(f"Status: {login_response.status_code}")
        
        if login_response.status_code == 200:
            token_data = login_response.json()
            access_token = token_data.get('access')
            user_data = token_data.get('user', {})
            print("‚úÖ Connexion r√©ussie")
            print(f"Access token: {access_token[:20]}...")
            print(f"User type: {user_data.get('user_type', 'unknown')}")
        else:
            print(f"‚ùå Erreur connexion: {login_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur connexion: {e}")
        return False
    
    headers = {
        "Authorization": f"Bearer {access_token}"
    }
    
    # 2. Test d'acc√®s aux pages admin
    print("\n2. Test d'acc√®s aux pages admin...")
    
    # Test acc√®s aux h√¥tels
    try:
        hotels_response = requests.get(f"{base_url}/api/hotels/", headers=headers)
        print(f"Status hotels: {hotels_response.status_code}")
        
        if hotels_response.status_code == 200:
            print("‚úÖ Acc√®s aux h√¥tels autoris√©!")
        else:
            print(f"‚ùå Erreur acc√®s h√¥tels: {hotels_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur acc√®s h√¥tels: {e}")
        return False
    
    # Test acc√®s aux appartements
    try:
        apartments_response = requests.get(f"{base_url}/api/apartments/", headers=headers)
        print(f"Status apartments: {apartments_response.status_code}")
        
        if apartments_response.status_code == 200:
            print("‚úÖ Acc√®s aux appartements autoris√©!")
        else:
            print(f"‚ùå Erreur acc√®s appartements: {apartments_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur acc√®s appartements: {e}")
        return False
    
    # Test acc√®s aux utilisateurs
    try:
        users_response = requests.get(f"{base_url}/api/users/", headers=headers)
        print(f"Status users: {users_response.status_code}")
        
        if users_response.status_code == 200:
            print("‚úÖ Acc√®s aux utilisateurs autoris√©!")
        else:
            print(f"‚ùå Erreur acc√®s utilisateurs: {users_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur acc√®s utilisateurs: {e}")
        return False
    
    # 3. Test de cr√©ation d'h√¥tel
    print("\n3. Test de cr√©ation d'h√¥tel...")
    
    hotel_data = {
        "name": "H√¥tel Test Navigation",
        "description": "H√¥tel de test pour navigation",
        "address": "123 Rue Navigation, Nouakchott",
        "city": "Nouakchott",
        "country": "Mauritanie",
        "phone": "+22212345678",
        "email": "navigation@hotel.com",
        "stars": 3,
        "wifi": True,
        "air_conditioning": True,
        "restaurant": False,
        "pool": False,
        "gym": False,
        "spa": False,
        "parking": True,
        "airport_shuttle": False,
        "room_types": [
            {
                "name": "Chambre Standard",
                "category": "double",
                "description": "Chambre confortable",
                "price_per_night": "150.00",
                "capacity": 2,
                "is_available": True
            }
        ]
    }
    
    try:
        create_response = requests.post(
            f"{base_url}/api/hotels/",
            json=hotel_data,
            headers=headers
        )
        
        print(f"Status cr√©ation: {create_response.status_code}")
        
        if create_response.status_code == 201:
            print("‚úÖ Cr√©ation d'h√¥tel r√©ussie!")
        else:
            print(f"‚ùå Erreur cr√©ation d'h√¥tel: {create_response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur cr√©ation d'h√¥tel: {e}")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ TEST NAVIGATION R√âUSSI!")
    print("‚úÖ Connexion fonctionne")
    print("‚úÖ Acc√®s aux pages admin autoris√©")
    print("‚úÖ Cr√©ation d'h√¥tels fonctionne")
    print("‚úÖ Navigation entre les pages fonctionne")
    print("\nüöÄ L'application est pr√™te pour la navigation!")
    print("=" * 60)
    
    return True

if __name__ == "__main__":
    success = test_navigation()
    
    if not success:
        print("\n‚ùå TEST NAVIGATION √âCHOU√â")
        print("‚ö†Ô∏è  Probl√®me de navigation d√©tect√©") 